<?php
/**
 * @file
 * Code for the MEI Spectrum feature.
 */

include_once 'mei_spectrum.features.inc';



function mei_spectrum_preprocess_views_view(&$vars) {
  if ($vars['name'] == 'political_parties'){
    drupal_add_js(drupal_get_path('module', 'mei_spectrum') . '/js/spectrum.js');
    drupal_add_css(drupal_get_path('module', 'mei_spectrum') . '/css/spectrum.css');
    
    //get list of field collection fields
    $data = field_info_instances('node','political_party');
    $collections = array();    
    foreach ($data as $field) {
      if ($field['widget']['module'] == 'field_collection') {
        $collections[] = $field['field_name'];
      }
    }

    
    //grab node data arrays from view result
    $nodes = array();    
    foreach ($vars['view']->result as $obj){
      //$nodes[nid]
      $nodes[$obj->nid] = $obj->_field_data['nid']['entity'];
      
      //add all of the field collection data
      foreach ($collections as $field_name) {
        $name = 'spectrum_' . $field_name;
       
        $temp = array();

        $field_data = $nodes[$obj->nid]->$field_name;
        if (isset($field_data['und'])) {    //@todo swap this to node language
          foreach ($field_data['und'] as $item_id) { 
                         
              $temp[] = field_collection_item_load($item_id['value']);
          }    
          $nodes[$obj->nid]->$name = $temp; 
        }
      }
 
    }
    // pare down for display
    $spectrum = array();
    foreach ($nodes as $node) {
  // dpm($node);
      $spectrum[$node->nid]['title'] = $node->title; 
      if (isset($node->body[$node->language])) {
        $spectrum[$node->nid]['description'] = $node->body[$node->language][0]['safe_value'];
      }
      if (isset($node->field_pp_logo[$node->language])) {
        //$spectrum[$node->nid]['logo'] = file_create_url($node->field_pp_logo[$node->language][0]['uri']);
        $spectrum[$node->nid]['logo'] = image_style_url('pp_main', $node->field_pp_logo[$node->language][0]['uri']);
      }
      if (isset($node->field_pp_founded[$node->language])) {
        $spectrum[$node->nid]['founded'] = date("j F Y", strtotime($node->field_pp_founded[$node->language][0]['value']));
      }
      //add sources
      if (isset($node->field_pp_source[$node->language])) {
        foreach ($node->field_pp_source[$node->language] as $source) { 
          $spectrum[$node->nid]['sources'][] = $source['url'];
        }
      }
      //add issues
      if (isset($node->spectrum_field_pp_issue)) {
        foreach ($node->spectrum_field_pp_issue as $issue) { 
          $term = taxonomy_term_load($issue->field_pp_issue_type[$node->language][0]['target_id']);
       
          $spectrum[$node->nid]['issues'][$term->name][] = $issue->field_pp_issue_stance[$node->language][0]['value'];
        }
      }

      //add key figures
      if (isset($node->spectrum_field_pp_figure)) {
        foreach ($node->spectrum_field_pp_figure as $figure) {      
          $spectrum[$node->nid]['figures'][] = array(
            'name' => $figure->field_pp_figure_name[$node->language][0]['value'],
            'description' => $figure->field_pp_figure_description[$node->language][0]['value'],
          ); 
        }
      }

      //add Quotes
      if (isset($node->spectrum_field_pp_quote)) {
        foreach ($node->spectrum_field_pp_quote as $quote) {      
          $spectrum[$node->nid]['quotes'][] = array(
            'author' => $quote->field_pp_quote_author[$node->language][0]['value'],
            'quotation' => $quote->field_pp_quote_quotation[$node->language][0]['value'],
            'description' => $quote->field_pp_quote_description[$node->language][0]['value'],
          ); 
        }
      }

    }

    $vars['spectrum'] = $spectrum;


  }
}
